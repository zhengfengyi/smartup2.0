pragma solidity >=0.4.21 <0.6.0;

interface ISutStore {
    function setCtMarketCreator(address ctAddress, address _creator)external;
    function activeCtMarket(address ctAddress) external;
    function setExchangeAvailable(address ctAddress, bool avilable) external;
    function setInitDeposit(address ctAddress, uint256 deposit) external;
    function setLastFlaggingConclude(address ctAddress, uint256 time)external;
    function pushCtMarket(address ctAddress)external;
    function setcConclusionFee(address ctAddress, uint256 fee) external;
    function setDissolveFee(address ctAddress, uint256 fee) external;
    function checkAddress(address sutplayer)external view returns(bool);
    function isCtMarketActive(address ctAddress)external view returns (bool isActive);
    function ableFlagCtMarket(address ctAddress)external view returns(bool);
    function flaggingNotStarted(address ctAddress)external view returns(bool);
    function setFlaggingStartedTime(address ctAddress, uint256 time) external; 
    function setfConclusionFee(address ctAddress, uint256 fee) external;
    function isInFlagging(address ctAddress, uint256 time)external view returns(bool);
    function isAlreadyHaveFlager(address ctAddress, address flagger) external view returns(bool);
    function flagerPostion(address ctAddress, address flagger)external view returns(uint256);
    function addFlaggersDeposit(address ctAddress, uint256 pos, uint256 depositAmount) external;
    function addFlaggers(address ctAddress, address flagger) external;
    function pushFlagerDeposit(address ctAddress, uint256 deposit) external;
    function addFlaggerDeposit(address ctAddress, uint256 depositAmount) external;
    function FlaggerDepositIsOk(address ctAddress)external view returns(bool);
    function _drawJurors(address ctAddress, address seeder) external;
    function addMarketAppealRound(address ctAddress) external;
    function votingCtMarket(address ctAddress) external;
    function setVotingStartedAt(address ctAddress, uint256 _time) external;
    function isInFlaggingPeriod(address ctAddress) external view returns(bool);
    function isFlaggerDepositHave(address ctAddress) external view returns(bool);
    function refundFlaggerDeposit(address ctAddress) external;
    function getfConclusionFee(address ctAddress) external view returns (uint256);
    function refundFee(address ctAddress,address to, uint256 fee) external;
    function clearFlagger(address ctAddress) external;
    function setFlaggingStartedAt(address ctAddress, uint256 _time) external; 
    function setLastFlaggingConcluded(address ctAddress,uint256 _time) external;
    function appealDepositIsOk(address ctAddress)external view returns(bool);
    function refundAllAppealerDeposit(address ctAddress)external;
    function getcConclusionFee(address ctAddress) external view returns (uint256);
    function clearAppealers(address ctAddress) external;
    function clearAppealersDeposit(address ctAddress) external;
    function getMarketAppealRound(address ctAddress) external view returns(uint8 _round);
    function setAppealStart(address ctAddress, uint256 _time) external;
    function pendindDissolveCtMarket(address ctAddress) external;
    function dissolvedCtMarket(address ctAddress) external;
    function isMarketStateVoting(address ctAddress) external view returns(bool);
    function isInVotingPeriod(address ctAddress) external view returns(bool);
    function vote(address ctAddress, address voter, bool dissolve)external returns(uint8 _appealRound);
    function getAppealersSize(address ctAddress) external view returns(uint256);
    function isMarketPenddingDissolve(address ctAddress)external view returns(bool);
    function appealingPeriod(address ctAddress) external view returns (uint256 start, uint256 end);
    function isAlreadyHaveAppealer(address ctAddress, address appealer) external view returns(bool);
    function appealerPostion(address ctAddress, address appealer) external view returns(uint256); 
    function addAppealersDeposit(address ctAddress, uint256 pos, uint256 depositAmount) external;
    function addAppealers(address ctAddress, address appealer) external;
    function pushAppealersDeposit(address ctAddress, uint256 deposit) external;
    function addAppealerDeposit(address ctAddress, uint256 depositAmount) external;
    function resetMarketBallots(address ctAddress) external;
    function isBallotsFinish(address ctAddress)external view returns(bool);
    function countVote(address ctAddress) external  view returns(uint8 _aye, uint8 _nay);
    function isGthMinballots(address ctAddress) external view returns (bool);
    function getFlaggerDeposit(address ctAddress) external view returns (uint256 _dispense);
    function dispenseDeposit(address ctAddress, uint256 amountToDispense, bool _ayeWin) external;
    function clearCtFlaggersDeposit(address ctAddress) external;
    function clearBallots(address ctAddress) external;
    function clearFlaggerDeposit(address ctAddress) external;
    function destroyJurors(address ctAddress) external;
    function deleteJurorVoters(address ctAddress) external;
    function resetAppealRound(address ctAddress) external;
    function resetAppealerDeposit(address ctAddress) external;
    function getInitalDeposit(address ctAddress) external view returns(uint256);
    function state(address ctAddress) external view returns (uint8);
    function creator(address ctAddress) external view returns(address);
    function flaggerSize(address ctAddress) external view returns (uint256);
    function flaggerList(address ctAddress) external view returns (address[] memory);
    function flaggerDeposits(address ctAddress) external view returns (uint256[] memory);
    function jurorSize(address ctAddress) external view returns (uint256);
    function nextFlaggableDate(address ctAddress) external view returns (uint256);
    function flaggingPeriod(address ctAddress) external view returns (uint256 start, uint256 end);
    function votingPeriod(address ctAddress) external view returns (uint256 start, uint256 end);
    function appealRound(address ctAddress) external view returns (uint8);
    function appealerList(address ctAddress) external view returns (address[] memory);
    function appealersDeposit(address ctAddress) external view returns (uint256[] memory);
    function appealerTotalDeposit(address ctAddress) external view returns (uint256);
    function ballots(address ctAddress) external view returns (uint8);
    function marketSize() external view returns (uint256);    
    function getAppealerDeposit(address ctAddress) external view returns(uint256);
    function jurorList(address ctAddress) external view returns (address[] memory);
    function dispens(address ctAddress, uint256 dispensAmount) external;
    function getDissolveFee(address ctAddress) external view returns(uint256);
}